qqp(main="gamma",ara$total.fruits)
setwd("/home/cyril/Documents/Master/sem_1/Data_analysis/reports/Arabidopsis/")
library(lme4);library(car);library(MASS);library(fits)
qqp(main="gamma",ara$total.fruits)
ara <- read.csv(file = "arabidopsis.csv")
qqp(main="gamma",ara$total.fruits)
ara <- read.csv(file = "arabidopsis.csv")
setwd("/home/cyril/Documents/Master/sem_1/Data_analysis/reports/Arabidopsis/")
setwd("/home/cyril/Documents/Master/sem_1/Data_analysis/Arabidopsis/")
library(lme4);library(car);library(MASS);library(fits)
ara <- read.csv(file = "arabidopsis.csv")
poisson <- fitdistr(ara$total.fruits, "Poisson")
qqp(main="gamma",ara$total.fruits)
poisson <- fitdistr(ara$total.fruits, "Poisson")
qqp(main="Poisson",ara$total.fruits, "pois", poisson$estimate)
qqp(main="Lognormal", ara$total.fruits,"lnorm")
qqp(main="gamma",ara$total.fruits,"gamma")
qqp(main="gamma",ara$total.fruits,"gamma",shape=3)
qqp(main="gamma",ara$total.fruits,"gamma",shape=2)
qqp(main="gamma",ara$total.fruits,"gamma",shape=1)
gamma <- fitdistr(ara$total.fruits,"gamma")
View(ara)
gamma <- fitdistr(ara$total.fruits,"nbinom")
gamma <- fitdistr(ara$total.fruits,"gamma")
qqp(ara$total.fruits,"gamma",shape=1)
qqp(ara$total.fruits,"gamma",gamma$estimate)
gamma <- fitdistr(ara$total.fruits,"gamma")
gamma <- fitdistr(x = ara$total.fruits,"gamma")
gamma <- fitdistr(x = ara$total.fruits,"gamma",start = 2)
gamma <- fitdistr(x = ara$total.fruits,"gamma",start = list(shape=2,k=3))
qqp(ara$total.fruits,"gamma",gamma$estimate)
qqp(ara$total.fruits,"gamma",shape=1)
qqp(ara$total.fruits,"gamma",shape=2)
qqp(ara$total.fruits,"gamma",shape=3)
qqp(ara$total.fruits,"gamma",shape=10)
qqp(ara$total.fruits,"gamma",shape=0)
qqp(ara$total.fruits,"gamma",shape=0.3)
qqp(ara$total.fruits,"gamma",shape=0.5)
gamma <- fitdistr(x = ara$total.fruits,"gamma")
gamma <- fitdistr(x = log10(ara$total.fruits),"gamma")
gamma <- fitdistr(x = ara$total.fruits+0.0001,"gamma")
qqp(ara$total.fruits,gamma$estimate)
qqp(ara$total.fruits,gamma$estimate,"gamma")
qqp(ara$total.fruits,"gamma",gamma$estimate)
qqp(main="Lognormal", ara$total.fruits+1,"lnorm")
qqp(main="Poisson",ara$total.fruits+1, "pois", poisson$estimate)
poisson <- fitdistr(ara$total.fruits+1, "Poisson")
gamma <- fitdistr(x = ara$total.fruits+1,"gamma")
qqp(ara$total.fruits,"gamma",shape=0.5)
qqp(ara$total.fruits,"gamma",gamma$estimate)
qqp(ara$total.fruits+1,"gamma",gamma$estimate)
qqp(ara$total.fruits+1,"gamma",shape=gamma$estimate[[1]],rate=gamma$estimate[[2]])
summary(ara)
View(ara)
View(ara)
glmer(total.fruits~1+status+amd+nutrient+rack+(1|gen)+(1|popu))
glmer(total.fruits~1+status+amd+nutrient+rack+(1|gen)+(1|popu),family="gamma")
glmer(total.fruits~1+status+amd+nutrient+rack+(1|gen)+(1|popu),family=gamma(shape=gamma$estimate[[1]],rate=gamma$estimate[[2]]))
glmer(total.fruits~1+status+amd+nutrient+rack+(1|gen)+(1|popu),family=gamma(shape=gamma$estimate[[1]]))
glmer(total.fruits+1~1+status+amd+nutrient+rack+(1|gen)+(1|popu),family=gamma(shape=gamma$estimate[[1]]))
glmer((total.fruits+1)~1+status+amd+nutrient+rack+(1|gen)+(1|popu),family=gamma(shape=gamma$estimate[[1]]))
glmer((total.fruits+1)~1+status+amd+nutrient+rack+(1|gen)+(1|popu),family=gamma(gamma$estimate))
glmer((total.fruits+1)~1+status+amd+nutrient+rack+(1|gen)+(1|popu),family=gamma(gamma$estimate[[1]]))
glmer((total.fruits+1)~1+status+amd+nutrient+rack+(1|gen)+(1|popu),family=gamma(gamma$estimate[[2]]))
glmer(total.fruits ~ 1+status+amd+nutrient+rack+(1|gen)+(1|popu),family=Gamma)
glmer(data=ata,total.fruits ~ 1+status+amd+nutrient+rack+(1|gen)+(1|popu),family=Gamma)
glmer(data=ara,total.fruits ~ 1+status+amd+nutrient+rack+(1|gen)+(1|popu),family=Gamma)
glmer(data=ara,(total.fruits+1) ~ 1+status+amd+nutrient+rack+(1|gen)+(1|popu),family=Gamma)
glmmPQL(data=ara,(total.fruits+1) ~ 1+status+amd+nutrient+rack+(1|gen)+(1|popu),family=Gamma)
View(ara)
glmmPQL(data=ara,(total.fruits+1) ~ 1+status+amd+nutrient+rack+(1|gen)+(1|popu),family=Gamma)
glmmPQL(data=ara,(total.fruits+1) ~ 1+status+amd+nutrient,random = (1|rack)+(1|gen)+(1|popu),family=Gamma)
glmmPQL(data=ara,(total.fruits+1) ~ 1+status+amd+nutrient,random = (1|rack)+(1|gen)+(1|popu),family=Gamma)
View(ara)
glmer(data=ara,(total.fruits+1) ~ 1+status+amd+nutrient+(1|rack)+(1|gen)+(1|popu),family=Gamma,verbose = T)
glmmPQL(data=ara,(total.fruits+1) ~ 1+status+amd+nutrient,random = (1|gen)+(1|popu),family=Gamma)
View(ara)
glmmPQL(data=ara,(total.fruits+1) ~ status+amd+nutrient, ~1|rack+gen+popu, family = "Gamma", verbose = FALSE)
glmmPQL(data=ara,(total.fruits+1) ~ status+amd+nutrient, ~1|rack+1|gen+1|popu, family = "Gamma", verbose = FALSE)
glmmPQL(data=ara,(total.fruits) ~ status+amd+nutrient, ~1|rack+1|gen+1|popu, family = "Gamma", verbose = FALSE)
glmmPQL(data=ara,(total.fruits+1) ~ status+amd+nutrient, ~1|rack+1|gen+1|popu, family = "Gamma")
glmer(data=ara,(total.fruits+1) ~ 1+status+amd+nutrient+(1|rack)+(1|gen)+(1|popu),family=Gamma)
glmmPQL(data=ara,(total.fruits+1) ~ status+amd+nutrient, ~1|rack+1|gen+1|popu, family = "Gamma")
glmer(data=ara,(total.fruits+1) ~ 1+status+amd+nutrient+(1|rack)+(1|gen)+(1|popu),family=Gamma)
View(ara)
str(ara$total.fruits)
overdisp_fun <- function(model) {
## number of variance parameters in an n-by-n variance-covariance matrix
vpars <- function(m) {
nrow(m) * (nrow(m) + 1)/2
}
# The next two lines calculate the residual degrees of freedom
model.df <- sum(sapply(VarCorr(model), vpars)) + length(fixef(model))
rdf <- nrow(model.frame(model)) - model.df
# extracts the Pearson residuals
rp <- residuals(model, type = "pearson")
Pearson.chisq <- sum(rp^2)
prat <- Pearson.chisq/rdf
# Generates a p-value. If less than 0.05, the data are overdispersed.
pval <- pchisq(Pearson.chisq, df = rdf, lower.tail = FALSE)
c(chisq = Pearson.chisq, ratio = prat, rdf = rdf, p = pval)
}
overdisp_fun(glmmPQL(data=ara,(total.fruits+1) ~ status+amd+nutrient, ~1|rack+1|gen+1|popu, family = "Gamma"))
mod<-glmer(data=ara,(total.fruits+1) ~ 1+status+amd+nutrient+(1|rack)+(1|gen)+(1|popu),family=Gamma)
overdisp_fun(mod)
summary(ara)
ara$gen <- as.factor(ara$gen)
View(ara)
ara$nutrient <- as.factor(ara$nutrient)
ara$rack <- as.factor(ara$rack)
ara <- read.csv(file = "arabidopsis.csv")
ara$gen <- as.factor(ara$gen)
ara$rack <- as.factor(ara$rack)
ara$nutrient <- as.factor(ara$nutrient)
poisson <- fitdistr(ara$total.fruits, "Poisson")
qqp(main="Poisson",ara$total.fruits, "pois", poisson$estimate)
qqp(main="Lognormal", ara$total.fruits,"lnorm")
gamma <- fitdistr(x = ara$total.fruits+1,"gamma")
qqp(ara$total.fruits,"gamma",shape=0.5)
qqp(ara$total.fruits+1,"gamma",shape=gamma$estimate[[1]],rate=gamma$estimate[[2]])
mod<-glmer(data=ara,(total.fruits+1) ~ 1+status+amd+nutrient+(1|rack)+(1|gen)+(1|popu),family=Gamma)
glmer(data=ara,(total.fruits+1) ~ 1+status+amd+nutrient+(1|rack)+(1|gen)+(1|popu),family=Gamma)
overdisp_fun(mod)
mod<-glmer(data=ara,(total.fruits+1) ~ 1+status+amd+nutrient+(1|rack)+(1|gen)+(1|popu),family="Gamma")
glmer(data=ara,(total.fruits+1) ~ 1+status+amd+nutrient+(1|rack)+(1|gen)+(1|popu),family="Gamma")
mod<-glmer(data=ara,(total.fruits+1) ~ status+amd+nutrient+(1|rack)+(1|gen)+(1|popu),family=Gamma)
mod<-glmer(data=ara,(total.fruits+1) ~ status*amd*nutrient+(1|rack)+(1|gen)+(1|popu),family=Gamma)
View(ara)
xtabs(~popu+gen, dataframe) # gen niché dans popu niché dans reg
xtabs(~popu+gen, ara) # gen niché dans popu niché dans reg
mod<-glmer(data=ara,(total.fruits+1) ~ status*amd*nutrient+(1|reg/popu/gen)+(1|reg)+(1|popu),family=Gamma)
with(dataframe, reg:factor(popu))
ara$pop_reg <- with(ara, reg:factor(popu))
with(ara, reg:factor(popu))
View(ara)
dataframe$pop_reg_gen <- with(dataframe, reg:factor(popu):factor(gen))
ara$pop_reg_gen <- with(ara, reg:factor(popu):factor(gen))
View(ara)
xtabs(~popu+gen, ara) # gen niché dans popu niché dans reg
ara$pop_reg_gen <- with(ara, reg:factor(popu):factor(gen))
levels(ara$gen)
length(levels(ara$gen))
length(levels(ara$pop_gen))
length(levels(ara$pop_reg_gen))
levels(ara$pop_reg_gen)
levels(ara$pop_reg_gen)
length(levels(ara$pop_reg_gen))
setwd("/home/cyril/Documents/Master/sem_1/Data_analysis/Arabidopsis/")
library(lme4);library(car);library(MASS);library(fits)
ara <- read.csv(file = "arabidopsis.csv")
ara$gen <- as.factor(ara$gen)
ara$rack <- as.factor(ara$rack)
ara$nutrient <- as.factor(ara$nutrient)
xtabs(~nutrients+gen, ara)
xtabs(~nutrient+gen, ara)
xtabs(~status+gen, ara)
xtabs(~reg+gen, ara)
xtabs(~pop+gen, ara)
xtabs(~popu+gen, ara)
View(ara)
density(ara$total.fruits)
plot(density(ara$total.fruits))
library(ggplot2)
ggplot(data=ara,aes(y=ara$total.fruits))+
geom_violin()
geom_violin(na.rm = F)
ggplot(data=ara,aes(y=ara$total.fruits))+
geom_violin(na.rm = F)
ara$total.fruits
ggplot(data=ara,aes(y=ara$total.fruits))+
geom_violin()
ggplot(data=ara,aes(y=ara$total.fruits+1))+
geom_violin()
ggplot(data=ara,aes(x=1,y=ara$total.fruits))+
geom_violin()
ggplot(data=ara,aes(x=1,y=ara$total.fruits))+
geom_violin(draw_quantiles = T)
ggplot(data=ara,aes(x=1,y=ara$total.fruits))+
geom_violin()+
geom_point()
ggplot(data=ara,aes(x=1,y=ara$total.fruits))+
geom_violin()+
geom_jitter()
ara$total.fruits[ara$total.fruits==0]
length(ara$total.fruits[ara$total.fruits==0])
ggplot(data=ara,aes(x=ara$amd,y=ara$total.fruits))+
geom_violin()+
geom_jitter()
ggplot(data=ara,aes(x=ara$status,y=ara$total.fruits))+
geom_violin()+
geom_jitter()
ggplot(data=ara,aes(x=ara$nutrient,y=ara$total.fruits))+
geom_violin()+
geom_jitter()
ggplot(data=ara,aes(x=ara$gen,y=ara$total.fruits))+
geom_violin()+
geom_jitter()
ggplot(data=ara,aes(x=ara$popu,y=ara$total.fruits))+
geom_violin()+
geom_jitter()
ggplot(data=ara,aes(x=ara$popu,y=ara$total.fruits))+
geom_violin()
ggplot(data=ara,aes(x=ara$reg,y=ara$total.fruits))+
geom_violin()
ggplot(data=ara,aes(x=ara$reg,y=ara$total.fruits))+
geom_violin()+
geom_jitter()
ggplot(data=ara,aes(x=ara$reg,y=ara$total.fruits))+
geom_violin(fill=ara$reg)+
geom_jitter()
ggplot(data=ara,aes(x=ara$reg,y=ara$total.fruits,fill=ara$reg))+
geom_violin()+
geom_jitter()
ggplot(data=ara,aes(x=1,y=ara$total.fruits,fill=ara$reg))+
geom_violin()+
geom_jitter()
ggplot(data=ara,aes(x=1,y=ara$total.fruits,fill="Total fruits"))+
geom_violin()+
geom_jitter()
densityPlot(ara$total.fruits)
library(lattice)
densityplot(ara$total.fruits)
densityplot(ara$total.fruits,pch=".")
densityplot(ara$total.fruits,pch=10)
densityplot(ara$total.fruits,pch=11)
densityplot(ara$total.fruits,pch=12)
densityplot(ara$total.fruits,pch=16)
boxplot(ara$total.fruits)
ggplot(data=ara,aes(x=1,y=total.fruits))+
geom_boxplot()+
geom_jitter()
ggplot(data=ara,aes(x=1,y=total.fruits))+
geom_boxplot()+
geom_jitter(width = 0.1)
ggplot(data=ara,aes(x=1,y=total.fruits))+
geom_boxplot()+
geom_jitter(width = 0.2)
ggplot(data=ara,aes(x=1,y=total.fruits))+
geom_boxplot()+
geom_jitter(width = 0.2,height = 0)
ggplot(data=ara,aes(x=1,y=total.fruits))+
geom_boxplot()+
geom_jitter(width = 0,height = 0)
ggplot(data=ara,aes(x=1,y=total.fruits))+
geom_boxplot()+
geom_jitter(width = 0.2,height = 0.2)
ggplot(data=ara,aes(x=1,y=total.fruits))+
geom_boxplot()+
geom_jitter(aes(x=1,y=ara$total.fruits[ara$total.fruits==0],col="red"),width = 0.2,height = 0.2,)+
geom_jitter(aes(x=1,y=ara$total.fruits[ara$total.fruits!=0],col="black"),width = 0.2,height = 0.2,)
ggplot(data=ara,aes(x=1,y=total.fruits))+
geom_boxplot()+
geom_jitter(aes(y=ara$total.fruits[ara$total.fruits==0]),col="red",width = 0.2,height = 0.2,)+
geom_jitter(aes(y=ara$total.fruits[ara$total.fruits!=0]),col="black",width = 0.2,height = 0.2,)
ggplot(aes(x=1,y=ara$total.fruits))+
geom_boxplot()+
geom_jitter(aes(y=ara$total.fruits[ara$total.fruits==0]),col="red",width = 0.2,height = 0.2,)+
geom_jitter(aes(y=ara$total.fruits[ara$total.fruits!=0]),col="black",width = 0.2,height = 0.2,)
ggplot(data=ara,aes(x=1,y=total.fruits))+
geom_boxplot()+
geom_jitter(data=ara[ara$total.fruits==0],col="red",width = 0.2,height = 0.2,)+
geom_jitter(aes(data=ara[ara$total.fruits!=0],col="black",width = 0.2,height = 0.2,)
)
ggplot(data=ara,aes(x=1,y=total.fruits))+
geom_boxplot()+
geom_jitter(data=ara[ara$total.fruits==0,],col="red",width = 0.2,height = 0.2,)+
geom_jitter(data=ara[ara$total.fruits!=0,],col="black",width = 0.2,height = 0.2,)
ggplot(data=ara,aes(x=1,y=total.fruits))+
geom_boxplot()+
geom_jitter(data=ara[ara$total.fruits==0,],col="red",width = 0.3,height = 0.2,)+
geom_jitter(data=ara[ara$total.fruits!=0,],col="black",width = 0.3,height = 0.2,)
ggplot(data=ara,aes(x=1,y=total.fruits))+
geom_boxplot()+
geom_jitter(data=ara[ara$total.fruits==0,],col="red",width = 0.8,height = 0.2,)+
geom_jitter(data=ara[ara$total.fruits!=0,],col="black",width = 0.8,height = 0.2,)
ggplot(data=ara,aes(x=1,y=total.fruits,fill="blue"))+
geom_boxplot()+
geom_jitter(data=ara[ara$total.fruits==0,],col="red",width = 0.8,height = 0.2,)+
geom_jitter(data=ara[ara$total.fruits!=0,],col="black",width = 0.8,height = 0.2,)
ara <- read.csv(file = "arabidopsis.csv")
ara$gen <- as.factor(ara$gen)
ara$rack <- as.factor(ara$rack)
ara$nutrient <- as.factor(ara$nutrient)
library(MASS)
poisson <- fitdistr(ara$total.fruits, "Poisson")
qqp(main="Poisson",ara$total.fruits, "pois", poisson$estimate)
qqp(main="Normal",ara$total.fruits,"Gaussian")
qqp(main="Normal",ara$total.fruits,"gaussian")
qqp(main="Normal",ara$total.fruits,"normal")
qqp(main="Normal",ara$total.fruits,"norm")
par(mfrow=c(2,2))
qqp(main="Normal",ara$total.fruits,"norm")
poisson <- fitdistr(ara$total.fruits, "Poisson")
qqp(main="Poisson",ara$total.fruits, "pois", poisson$estimate)
qqp(main="Lognormal", ara$total.fruits,"lnorm")
gamma <- fitdistr(x = ara$total.fruits+1,"gamma")
qqp(ara$total.fruits,"gamma",shape=0.5)
qqp(ara$total.fruits+1,"gamma",shape=gamma$estimate[[1]],rate=gamma$estimate[[2]])
par(mfrow=c(2,2))
qqp(main="Normal",ara$total.fruits,"norm")
poisson <- fitdistr(ara$total.fruits, "Poisson")
qqp(main="Poisson",ara$total.fruits, "pois", poisson$estimate)
qqp(main="Lognormal", ara$total.fruits,"lnorm")
gamma <- fitdistr(x = ara$total.fruits+1,"gamma")
qqp(ara$total.fruits+1,"gamma",shape=gamma$estimate[[1]],rate=gamma$estimate[[2]])
library(MASS)
par(mfrow=c(2,2))
qqp(main="Normal",ara$total.fruits,"norm")
poisson <- fitdistr(ara$total.fruits, "Poisson")
qqp(main="Poisson",ara$total.fruits, "pois", poisson$estimate)
qqp(main="Lognormal", ara$total.fruits,"lnorm")
gamma <- fitdistr(x = ara$total.fruits+1,"gamma")
qqp(ara$total.fruits+1,mian="Gamma","gamma",shape=gamma$estimate[[1]],rate=gamma$estimate[[2]])
qqp(ara$total.fruits+1,main="Gamma","gamma",shape=gamma$estimate[[1]],rate=gamma$estimate[[2]])
densityplot(ara$total.fruits)
boxplot(ara$total.fruits)
margin(ara)
margin(ara,ara)
xtabs(ara)
xtabs(ara,total.fruits~gen)
xtabs(ara,total.fruits+gen)
xtabs(~popu+gen, ara)
rowSums(xtabs(~popu+gen, ara)) # gen niché dans popu niché dans reg
rowSums(xtabs(~reg.finalizer()+gen, ara)) # gen niché dans popu niché dans reg
rowSums(xtabs(~reg+gen, ara)) # gen niché dans popu niché dans reg
xtabs(~popu+gen, ara)
