birth_weight<-read.table("birtweigth_study.txt", sep= " ")
plotlist <- list()
count <- 1
df <- birth_weight
for(c in colnames(df)){
print(count)
if(is.numeric(df[1,c])){
plotlist[[count]] <-ggplot(data=df)+
geom_point(aes(x=df[,c],y=df$bwt))+
theme_bw()
} else{
plotlist[[count]] <-ggplot(data=df)+
geom_boxplot(aes(x=df[,c],y=df$bwt))+
theme_bw()
}
count <- count + 1
}
library(ggplot2);library(gridExtra)
row.names(birth_weight) <- NULL
birth_weight$lwt <- birth_weight$lwt*0.45359237
birth_weight$bwt <- birth_weight$bwt/1000
birth_plotter <- function(df){
plotlist <- list()
count <- 1
for(c in colnames(df)){
if(is.numeric(df[1,c])){
plotlist[[count]] <-ggplot(data=df)+
geom_point(aes(x=df[,c],y=df$bwt))+
theme_bw()
} else{
plotlist[[count]] <-ggplot(data=df)+
geom_boxplot(aes(x=df[,c],y=df$bwt))+
theme_bw()
}
count <- count + 1
}
return(plotlist)
}
df <- birth_weight
plotlist <- list()
count <- 1
for(c in colnames(df)){
print(count)
if(is.numeric(df[1,c])){
plotlist[[count]] <-ggplot(data=df)+
geom_point(aes(x=df[,c],y=df$bwt))+
theme_bw()
} else{
plotlist[[count]] <-ggplot(data=df)+
geom_boxplot(aes(x=df[,c],y=df$bwt))+
theme_bw()
}
count <- count + 1
}
plotlist[[2]]
plotlist <- list()
count <- 1
for(c in colnames(df)){
print(count)
if(is.numeric(df[1,c])){
plotlist[[c]] <-ggplot(data=df)+
geom_point(aes(x=df[,c],y=df$bwt))+
theme_bw()
} else{
plotlist[[c]] <-ggplot(data=df)+
geom_boxplot(aes(x=df[,c],y=df$bwt))+
theme_bw()
}
count <- count + 1
}
plotlist
plotlist[["age"]]
plotlist <- list()
count <- 1
for(c in colnames(df)){
print(count)
if(is.numeric(df[1,c])){
plotlist[[c]] <-ggplot(data=df)+
geom_point(aes_string(x=df[,c],y=df$bwt))+
theme_bw()
} else{
plotlist[[c]] <-ggplot(data=df)+
geom_boxplot(aes_string(x=df[,c],y=df$bwt))+
theme_bw()
}
count <- count + 1
}
plotlist[["age"]]
grid.arrange(grobs=birth_plotter(birth_weight),ncol=2)
birth_plotter <- function(df){  # Creating a function to plot all variables vs birth weight
plotlist <- list()  # Initiating the list that will contain plots
count <- 1  # Counter for list indexing
for(c in colnames(df)){  # Iterating over variables names
if(is.numeric(df[1,c])){  # If the variable is numeric, make a scatterplot
plotlist[[count]] <-ggplot(data=df)+
geom_point(aes_string(x=df[,c],y=df$bwt))+  # aes_string instead of aes to prevent erasing of values at last iteration
theme_bw()
} else{  # If the variable is a factor, make a boxplot
plotlist[[count]] <-ggplot(data=df)+
geom_boxplot(aes_string(x=df[,c],y=df$bwt))+
theme_bw()
}
count <- count + 1
}
return(plotlist)
}
grid.arrange(grobs=birth_plotter(birth_weight),ncol=2)
birth_plotter <- function(df){  # Creating a function to plot all variables vs birth weight
plotlist <- list()  # Initiating the list that will contain plots
count <- 1  # Counter for list indexing
for(c in colnames(df)){  # Iterating over variables names
if(is.numeric(df[1,c])){  # If the variable is numeric, make a scatterplot
plotlist[[count]] <-ggplot(data=df)+
geom_point(aes_string(x=df[,c],y=df$bwt))+  # aes_string instead of aes to prevent erasing of values at last iteration
theme_bw()+xlab(c)+ylab("Birth weight")
} else{  # If the variable is a factor, make a boxplot
plotlist[[count]] <-ggplot(data=df)+
geom_boxplot(aes_string(x=df[,c],y=df$bwt))+
theme_bw()+xlab(c)+ylab("Birth weight")
}
count <- count + 1
}
return(plotlist)
}
grid.arrange(grobs=birth_plotter(birth_weight),ncol=2)
birth_plotter <- function(df){  # Creating a function to plot all variables vs birth weight
plotlist <- list()  # Initiating the list that will contain plots
count <- 1  # Counter for list indexing
for(c in colnames(df)){  # Iterating over variables names
if(c != "bwt"){
if(is.numeric(df[1,c])){  # If the variable is numeric, make a scatterplot
plotlist[[count]] <-ggplot(data=df)+
geom_point(aes_string(x=df[,c],y=df$bwt))+  # aes_string instead of aes to prevent erasing of values at last iteration
theme_bw()+xlab(c)+ylab("Birth weight")
} else{  # If the variable is a factor, make a boxplot
plotlist[[count]] <-ggplot(data=df)+
geom_boxplot(aes_string(x=df[,c],y=df$bwt))+
theme_bw()+xlab(c)+ylab("Birth weight")
}
count <- count + 1
}
}
return(plotlist)
}
grid.arrange(grobs=birth_plotter(birth_weight),ncol=2)
median(birth_weight$bwt[birth_weight$smoke=="SMOKE"])
median(birth_weight$bwt[birth_weight$smoke=="NOSMOKE"])
median(birth_weight$bwt[birth_weight$ptd=="PPREM"])
median(birth_weight$bwt[birth_weight$ptd=="NOPPREM"])
View(birth_weight)
birth_weight<-read.table("birtweigth_study.txt", sep= " ")
row.names(birth_weight) <- NULL
birth_weight$lwt <- birth_weight$lwt*0.45359237
birth_weight$bwt <- birth_weight$bwt/1000
shapiro.test(birth_weight$bwt)
qqnorm(birth_weight$bwt)
qqline(birth_weight$bwt)
anova(lm(bwt ~ age+lwt+ht+smoke+ptd,birth_weight))
anova(lm(bwt ~ ht*smoke*lwt*ptd*age,birth_weight))
lm(bwt ~ ht*smoke*lwt*ptd*age,birth_weight)
